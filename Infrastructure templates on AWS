########################################################################
# Aurora bastion instance specifications                               #     
########################################################################
/*
resource "aws_instance" "irma-aurora-bastion" {
  ami                         = "ami-[image]"
  instance_type               = "t2.micro"
  associate_public_ip_address = true
  subnet_id = "subnet-[subnetID]"
  key_name = aws_key_pair.bastion_key.key_name
  vpc_security_group_ids = [aws_security_group.bastion-sg.id]
  #associate the proper vpc that corresponds to the environment
  # root disk
  root_block_device {
    volume_size           = "20"
    volume_type           = "gp2"
    encrypted             = true
    kms_key_id            = aws_kms_key.irma-kms-key.key_id
    delete_on_termination = true
  }
  tags = {
    Name = "irma-aurora-bastion"
  }
}
#resource "aws_key_pair" "bastion_key" {
#  key_name   = var.bastion_ssh[var.stage]
#  #Find the proper ssh key from SSM store
#  public_key = "[generate ssh key pair or have it from somewhere]"
#}
resource "aws_security_group" "bastion-sg" {
  name   = var.irma-bastion-security-group[var.stage]
  vpc_id = var.vpc_id[var.stage]
  #put  a refference to a logical name of the VPC on all stages
  ingress {
    protocol    = "tcp"
    from_port   = 22
    to_port     = 22
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    protocol    = -1
    from_port   = 0 
    to_port     = 0 
    cidr_blocks = ["0.0.0.0/0"]
  }
}
resource "aws_kms_key" "[name of kms key]" {
  description              = "KMS Key info"
  deletion_window_in_days  = 10
  customer_master_key_spec = "SYMMETRIC_DEFAULT"
}
*/
